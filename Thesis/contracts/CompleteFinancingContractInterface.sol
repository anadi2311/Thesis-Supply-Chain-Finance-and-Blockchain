pragma solidity >=0.5.0 <0.6.9;

interface CompleteFinancingContractInterface{
    
    function manufactureProd(uint _productId, uint _amount) external returns(bool);
    
    function getInventory(uint _productId) external view returns(uint);
    
    function removeProduct(uint _productId) external returns (bool success);
    
    function registerBank(string calldata _bankName, string calldata _bankCode )external returns (bool success);
    
    function getBank(uint _bankId) external view returns (
        uint bankId,
        string memory bankName,
        string memory bankCode,//confirm with prof 
        address payable bankAddress);
    
    function makePurchaseOrderRequest(uint _productId, uint _qty, uint _buyerCompanyId ) external returns (bool success);
    
    function getPurchaseOrderRequest(uint _orderId) external view returns( 
        uint purchaseOrderId,
        uint productId,
        uint buyerCompanyId,
        uint qty,
        bool isAccepted
       );
    
    
    function acceptOrder( uint _orderId, uint _carrierId, uint _paymentDueDays, bool _invoiceFinanceAccepted) external returns (bool success);
    
    function getInvoice(uint _orderId) external view returns(
        uint invoiceId,
        uint orderId,
        uint paymentdeadline,
        bool isInvoiceApproved,
        bool isPaymentDoneByBuyer,
        bool isPaymenttakenBySupplier,
        bool isFinanceRequested,
        bool isInvoiceFinanceAccepted,
        uint timeOfCreation
        );
        
    function getBillofLading( uint _orderId) external view returns(
        uint bolId,
        uint orderId,
        uint buyerCompanyId,
        uint carrierId,
        string memory carrierName
        );
    
    function getShipment( uint _orderId) external view returns(
        uint trackingId,
        uint carrierId,
        string memory deliverAddress,
        uint qty,
        bool isShipmentRecieved
        );   
    
    function confirmShipment(uint _invoiceId) external returns (bool success);   

    function cancelOrder(uint _orderId) external returns(bool success);
    
    function makePayment( uint _invoiceId) external payable returns (bool success);

    function liquidateRecievables( uint _invoiceId) external returns (bool success);

    
     /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ----------------- /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////                    /////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ///////////////////////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ///////////////////////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ///////////////////////////////  -----------------  //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  ///////////////////////////////                     //////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   
    
    function applyPoFinance(uint _orderId, uint _bankId) external returns(bool success);
    
    function getPoFinance(uint _poFinanceId) external view returns(    
        uint poFinanceId,
        uint bankId,
        uint orderId,
        uint buyerCompanyId,
        uint value,
        bool isApproved,
        uint timeOfApproval
        );
    
    function approvePOFinance(uint _poFinanceId) external payable returns(bool success);
    
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ///////               ////////  /  /////////  /////  ////////////////////  ////            ////////////////////////////////////////////////
  /////////////  ///////////////  //  ////////  //////  //////////////////  ////  ////////// ////////////////////////////////////////////////
  /////////////  ///////////////  ///  ///////  ///////  ////////////////  /////  ////////// ////////////////////////////////////////////////
  /////////////  ///////////////  ////  //////  ////////  //////////////  //////  ////////// ////////////////////////////////////////////////
  /////////////  ///////////////  /////  /////  /////////  ////////////  ///////  ////////// ///////////////////////////////////////////////
  /////////////  ///////////////  //////  ////  //////////  //////////  ////////  ////////// ////////////////////////////////////////////////
  /////////////  ///////////////  ///////  ///  ///////////  ////////  /////////  ////////// ///////////////////////////////////////////////
  /////////////  ///////////////  ////////  //  ////////////  //////  //////////  ////////// ///////////////////////////////////////////////
  /////////////  ///////////////  /////////  /  /////////////  ////  ///////////  ////////// ///////////////////////////////////////////////
  /////////////  ///////////////  //////////  / //////////////  //  ////////////  ////////// ///////////////////////////////////////////////
  /////////////  ///////////////  ///////////   //////////////// / /////////////  ////////// ////////////////////////////////////////////////
  ////////              ////////  ////////////  ////////////////  ///////////////            ////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  function applyApprovedPayableInvoiceFinance(uint _invoiceId, uint _bankId) external returns (bool success);
  
  function approveInvoiceFinance( uint _invoiceFinanceId) external payable returns (bool success);
  
  function getInvoiceFinance(uint _invoiceFinanceId) external view returns(
        uint invoiceFinanceId,
        uint bankId,
        uint invoiceId,
        uint buyerCompanyId,
        uint value,
        bool isApproved
      );
  
  
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
///////////////////////////////////                    ////////////////////              ////////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////   ////////////////////              ////////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////   ////////////////////   ///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////   ////////////////////   ///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////   ////////////////////   ///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////                    ////////////////////               ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////    ///////////////////               ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    //////////////    ///////////////////////////////  ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    ///////////////    //////////////////////////////  ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    ////////////////    /////////////////              ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    /////////////////    ////////////////              ///////////////////////////////////////////////////////////////////////////
///////////////////////////////////    //////////////////    ////////////////////////////////////////////////////////////////////////////////////////////////////////    

function registerAsInsuranceCompany( string calldata _companyName, string  calldata _location, string calldata _businessNumber) external ; 

function rateSpv( uint _spvId, uint8 _rating)  external;     

function getSpv (uint _spvId) external view returns (
        uint spvId,
        uint issuerId,
        uint insuraceCompanyId,
        uint8 rating);

function applyReverseSecuritization(uint _buyerCompanyId, uint _insuranceCompanyId) external; 

function getSecurity( uint _securityId) external view returns (
        uint sId,
        uint amount,
        uint buyerCompanyId,
        uint spvId
    );

function getNoteInfo(uint _noteId) external view returns(
        uint noteId,
        uint sId,
        uint amount,
        address payable owner,
        bool isRedeemed

);

function buySecurities( uint _sId) external payable;

function liquidateNote ( uint _noteId) external; 

function getRecBalance(address _from) external view returns(uint recbalance);

function getSecBalance(address _from) external view returns(uint secBalance);

    
}
